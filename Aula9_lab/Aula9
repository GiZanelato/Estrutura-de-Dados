#include <stdio.h>
#include <stdlib.h>

#define tam_hash 11

typedef struct Celula {
    int valor;
    struct Celula* proximo;
} Celula;

typedef struct {
    Celula* inicio;
} Lista;

typedef struct {
    Lista* table[tam_hash];
} Hash;

// Inicializa a tabela hash
Hash* start_hash() {
    Hash *hash = malloc(sizeof(Hash));
    for (int i = 0; i < tam_hash; i++) {
        Lista *lista = malloc(sizeof(Lista));
        lista->inicio = NULL;
        hash->table[i] = lista;
    }
    return hash;
}

// Insere valor na tabela hash (encadeamento externo)
void inserir_hash(Hash* hash, int valor) {
    int pos = valor % tam_hash;
    Celula *nova = malloc(sizeof(Celula));
    nova->valor = valor;
    nova->proximo = NULL;

    // Inserção no início da lista
    nova->proximo = hash->table[pos]->inicio;
    hash->table[pos]->inicio = nova;
}

// Remove valor da tabela hash
void remover_hash(Hash* hash, int valor) {
    int pos = valor % tam_hash;
    Celula *atual = hash->table[pos]->inicio;
    Celula *anterior = NULL;

    while (atual != NULL && atual->valor != valor) {
        anterior = atual;
        atual = atual->proximo;
    }

    if (atual == NULL) {
        // Valor não encontrado
        return;
    }

    // Remove o nó encontrado
    if (anterior == NULL) {
        // Remoção do primeiro elemento da lista
        hash->table[pos]->inicio = atual->proximo;
    } else {
        anterior->proximo = atual->proximo;
    }

    free(atual);
}

// Imprime a tabela hash formatada
void imprimir(Hash* hash) {
    printf("---------------------\n");
    for (int i = 0; i < tam_hash; i++) {
        printf("%d ->", i);
        Celula *atual = hash->table[i]->inicio;
        while (atual != NULL) {
            printf(" %d", atual->valor);
            atual = atual->proximo;
        }
        printf(" \n");
    }
    printf("---------------------\n");
}

int main(void) {
    Hash* hash = start_hash();
    int valor;

    // Inserção
    while (1) {
        scanf("%d", &valor);
        if (valor == 0)
            break;
        inserir_hash(hash, valor);
    }
    imprimir(hash);

    // Remoção
    while (1) {
        scanf("%d", &valor);
        if (valor == 0)
            break;
        remover_hash(hash, valor);
    }
    imprimir(hash);

    return 0;
}
